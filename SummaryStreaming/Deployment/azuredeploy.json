{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Namespace prefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for Event hubs namespaces"
      }
    },
    "Storage Account Name": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage where to capture events"
      }
    },
    "SQL Admin Password": {
      "type": "securestring",
      "metadata": {
        "description": "Password of SQL Admin"
      }
    }
  },
  "variables": {
    "SQL Server Name": "[concat('sqlserver-', uniqueString(concat(resourceGroup().id, parameters('Namespace prefix'))))]",
    "SQL DB Name": "summary",
    "SQL Admin Name": "server-admin",
    "Primary Namespace": "[concat(parameters('Namespace prefix'), '-primary')]",
    "Secondary Namespace": "[concat(parameters('Namespace prefix'), '-secondary')]",
    "Primary Telemetry Hub Id": "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('Primary Namespace'), 'telemetry')]",
    "Summary Hub Id": "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('Primary Namespace'), 'summary')]",
    "Primary Namespace Listen Rule Id": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', variables('Primary Namespace'), 'listenNamespaceRule')]",
    "Primary Namespace Send Rule Id": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', variables('Primary Namespace'), 'sendNamespaceRule')]",
    "Primary Telemetry Listen Rule Id": "[resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', variables('Primary Namespace'), 'telemetry', 'listenTelemetryRule')]",
    "Summary Send Rule Id": "[resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', variables('Primary Namespace'), 'summary', 'sendSummaryRule')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('Storage Account Name')]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "sku": {
        "name": "Standard_LRS"
      },
      "tags": {},
      "kind": "StorageV2"
    },
    {
      "type": "Microsoft.Sql/servers",
      "name": "[variables('SQL Server Name')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {},
      "properties": {
        "administratorLogin": "[variables('SQL Admin Name')]",
        "administratorLoginPassword": "[parameters('SQL Admin Password')]"
      },
      "resources": [
        {
          "type": "databases",
          "name": "[variables('SQL DB Name')]",
          "apiVersion": "2014-04-01",
          "location": "[resourceGroup().location]",
          "tags": {},
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers/', variables('SQL Server Name'))]"
          ],
          "properties": {
            "edition": "Standard"
          }
        },
        {
          "type": "firewallRules",
          "name": "allow-azure-firewall-rule",
          "apiVersion": "2015-05-01-preview",
          "tags": {},
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers/', variables('SQL Server Name'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2017-04-01",
      "name": "[variables('Primary Namespace')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {},
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0
      },
      "resources": [
        {
          "type": "eventhubs",
          "apiVersion": "2017-04-01",
          "name": "telemetry",
          "dependsOn": [
            "[resourceId('Microsoft.EventHub/namespaces', variables('Primary Namespace'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage Account Name'))]"
          ],
          "properties": {
            "messageRetentionInDays": 1,
            "partitionCount": 5,
            "status": "Active",
            "captureDescription": {
              "enabled": true,
              "encoding": "Avro",
              "intervalInSeconds": 120,
              "sizeLimitInBytes": 10485760,
              "destination": {
                "name": "EventHubArchive.AzureBlockBlob",
                "properties": {
                  "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage Account Name'))]",
                  "blobContainer": "telemetry-capture"
                }
              }
            }
          },
          "resources": [
            {
              "type": "authorizationRules",
              "apiVersion": "2017-04-01",
              "name": "listenTelemetryRule",
              "dependsOn": [
                "[variables('Primary Telemetry Hub Id')]"
              ],
              "properties": {
                "rights": [
                  "Listen"
                ]
              }
            }
          ]
        },
        {
          "type": "eventhubs",
          "apiVersion": "2017-04-01",
          "name": "summary",
          "dependsOn": [
            "[resourceId('Microsoft.EventHub/namespaces', variables('Primary Namespace'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage Account Name'))]"
          ],
          "properties": {
            "messageRetentionInDays": 1,
            "partitionCount": 5,
            "status": "Active",
            "captureDescription": {
              "enabled": true,
              "encoding": "Avro",
              "intervalInSeconds": 120,
              "sizeLimitInBytes": 10485760,
              "destination": {
                "name": "EventHubArchive.AzureBlockBlob",
                "properties": {
                  "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage Account Name'))]",
                  "blobContainer": "summary-capture"
                }
              }
            }
          },
          "resources": [
            {
              "type": "authorizationRules",
              "apiVersion": "2017-04-01",
              "name": "sendSummaryRule",
              "dependsOn": [
                "[variables('Summary Hub Id')]"
              ],
              "properties": {
                "rights": [
                  "Send"
                ]
              }
            }
          ]
        },
        {
          "type": "authorizationRules",
          "apiVersion": "2017-04-01",
          "name": "sendNamespaceRule",
          "dependsOn": [
            "[resourceId('Microsoft.EventHub/namespaces', variables('Primary Namespace'))]"
          ],
          "properties": {
            "rights": [
              "Send"
            ]
          }
        },
        {
          "type": "authorizationRules",
          "apiVersion": "2017-04-01",
          "name": "listenNamespaceRule",
          "dependsOn": [
            "[resourceId('Microsoft.EventHub/namespaces', variables('Primary Namespace'))]"
          ],
          "properties": {
            "rights": [
              "Listen"
            ]
          }
        }
      ]
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2017-04-01",
      "name": "[variables('Secondary Namespace')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {},
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0
      },
      "resources": [
        {
          "type": "eventhubs",
          "apiVersion": "2017-04-01",
          "name": "telemetry",
          "dependsOn": [
            "[resourceId('Microsoft.EventHub/namespaces', variables('Secondary Namespace'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage Account Name'))]"
          ],
          "properties": {
            "messageRetentionInDays": 1,
            "partitionCount": 5,
            "status": "Active",
            "captureDescription": {
              "enabled": true,
              "encoding": "Avro",
              "intervalInSeconds": 120,
              "sizeLimitInBytes": 10485760,
              "destination": {
                "name": "EventHubArchive.AzureBlockBlob",
                "properties": {
                  "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage Account Name'))]",
                  "blobContainer": "telemetry-secondary-capture"
                }
              }
            }
          },
          "resources": []
        }
      ]
    },
    {
      "type": "Microsoft.StreamAnalytics/StreamingJobs",
      "apiVersion": "2016-03-01",
      "name": "summary-job",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('Primary Telemetry Listen Rule Id')]",
        "[variables('Summary Send Rule Id')]",
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('Secondary Namespace'), 'telemetry')]"
      ],
      "properties": {
        "sku": {
          "name": "standard"
        },
        "outputStartMode": "JobStartTime",
        "outputErrorPolicy": "stop",
        "eventsOutOfOrderPolicy": "adjust",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "inputs": [
          {
            "name": "primary-telemetry",
            "properties": {
              "type": "stream",
              "dataSource": {
                "type": "Microsoft.ServiceBus/EventHub",
                "properties": {
                  "serviceBusNamespace": "[variables('Primary Namespace')]",
                  "sharedAccessPolicyName": "listenTelemetryRule",
                  "sharedAccessPolicyKey": "[listKeys(variables('Primary Telemetry Listen Rule Id'), '2017-04-01').primaryKey]",
                  "eventHubName": "telemetry"
                }
              },
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8",
                  "format": "Array"
                }
              }
            }
          }
        ],
        "outputs": [
          {
            "name": "summary",
            "properties": {
              "type": "stream",
              "dataSource": {
                "type": "Microsoft.ServiceBus/EventHub",
                "properties": {
                  "serviceBusNamespace": "[variables('Primary Namespace')]",
                  "sharedAccessPolicyName": "sendSummaryRule",
                  "sharedAccessPolicyKey": "[listKeys(variables('Summary Send Rule Id'), '2017-04-01').primaryKey]",
                  "eventHubName": "summary"
                }
              },
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8",
                  "format": "Array"
                }
              }
            }
          }
        ],
        "transformation": {
          "name": "Transformation",
          "properties": {
            "streamingUnits": 1,
            "query": "SELECT\r\nCOUNT(*) AS Count,\r\nwidgetId INTO [summary]\r\nFROM [primary-telemetry]\r\nTIMESTAMP BY createdAt\r\nGROUP BY widgetId, TumblingWindow(second, 30)"
          }
        }
      }
    },
    {
      "type": "microsoft.web/connections",
      "apiVersion": "2016-06-01",
      "name": "primaryNamespaceSendConnection",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('Primary Namespace Send Rule Id')]"
      ],
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'eventhubs')]"
        },
        "displayName": "Primary Namespace Send Connection",
        "parameterValues": {
          "connectionString": "[concat('Endpoint=sb://', variables('Primary Namespace'), '.servicebus.windows.net/;SharedAccessKeyName=sendNamespaceRule;SharedAccessKey=', listKeys(variables('Primary Namespace Send Rule Id'), '2017-04-01').primaryKey)]"
        }
      }
    },
    {
      "type": "microsoft.web/connections",
      "apiVersion": "2016-06-01",
      "name": "primaryNamespaceListenConnection",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('Primary Namespace Listen Rule Id')]"
      ],
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'eventhubs')]"
        },
        "displayName": "Primary Namespace Listen Connection",
        "parameterValues": {
          "connectionString": "[concat('Endpoint=sb://', variables('Primary Namespace'), '.servicebus.windows.net/;SharedAccessKeyName=listenNamespaceRule;SharedAccessKey=', listKeys(variables('Primary Namespace Listen Rule Id'), '2017-04-01').primaryKey)]"
        }
      }
    },
    {
      "type": "microsoft.web/connections",
      "apiVersion": "2016-06-01",
      "name": "sqlConnection",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', variables('SQL Server Name'), variables('SQL DB Name'))]"
      ],
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'sql')]"
        },
        "displayName": "SQL Connection",
        "parameterValues": {
          "server": "[variables('SQL Server Name')]",
          "database": "[variables('SQL DB Name')]",
          "username": "[variables('SQL Admin Name')]",
          "password": "[parameters('SQL Admin Password')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "name": "update-summary-app",
      "apiVersion": "2016-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', 'primaryNamespaceListenConnection')]",
        "[resourceId('Microsoft.Web/connections', 'sqlConnection')]"
      ],
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Execute_stored_procedure": {
              "inputs": {
                "body": {
                  "jsonPayload": "triggerBody()?['ContentData']"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sql']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[updateSummaries]'))}"
              },
              "runAfter": {
              },
              "type": "ApiConnection"
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_events_are_available_in_Event_Hub": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['eventhubs']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/@{encodeURIComponent('summary')}/events/batch/head",
                "queries": {
                  "contentType": "application/json",
                  "consumerGroupName": "$Default",
                  "maximumEventsCount": 50
                }
              },
              "recurrence": {
                "frequency": "Second",
                "interval": 15
              },
              "splitOn": "@triggerBody()"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "eventhubs": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'eventhubs')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', 'primaryNamespaceListenConnection')]",
                "connectionName": "primaryNamespaceListenConnection"
              },
              "sql": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'sql')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', 'sqlConnection')]",
                "connectionName": "sqlConnection"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "name": "simulate-telemetry-app",
      "apiVersion": "2016-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', 'primaryNamespaceSendConnection')]"
      ],
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Until": {
              "type": "Until",
              "expression": "@equals(1, 2)",
              "limit": {
                "timeout": "PT10S"
              },
              "actions": {
                "Generate-Event-Document": {
                  "type": "Compose",
                  "inputs": {
                    "createdAt": "@utcNow()",
                    "widgetId": "@rand(1, 100)"
                  },
                  "runAfter": {}
                },
                "Send_event": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['eventhubs']['connectionId']"
                      }
                    },
                    "method": "post",
                    "body": {
                      "ContentData": "@{base64(outputs('Generate-Event-Document'))}"
                    },
                    "path": "/@{encodeURIComponent('telemetry')}/events"
                  },
                  "runAfter": {
                    "Generate-Event-Document": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {}
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "inputs": {
                "schema": {}
              },
              "kind": "Http",
              "type": "Request"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "eventhubs": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'eventhubs')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', 'primaryNamespaceSendConnection')]",
                "connectionName": "primaryNamespaceSendConnection"
              }
            }
          }
        }
      }
    }
  ],
  "outputs": {}
}
