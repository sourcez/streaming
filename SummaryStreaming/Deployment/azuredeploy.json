{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Namespace prefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for Event hubs namespaces"
      }
    },
    "Storage Account Name": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage where to capture events"
      }
    }
  },
  "variables": {
    "Primary Event Hub Namespace": "[concat(parameters('Namespace prefix'), '-primary')]",
    "Secondary Event Hub Namespace": "[concat(parameters('Namespace prefix'), '-secondary')]",
    "Primary Telemetry Hub Id": "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('Primary Event Hub Namespace'), 'telemetry')]",
    "Summary Hub Id": "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('Primary Event Hub Namespace'), 'summary')]",
    "Primary Telemetry Listen Rule Id": "[resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', variables('Primary Event Hub Namespace'), 'telemetry', 'listenTelemetryRule')]",
    "Summary Send Rule Id": "[resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', variables('Primary Event Hub Namespace'), 'summary', 'sendSummaryRule')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('Storage Account Name')]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "sku": {
        "name": "Standard_LRS"
      },
      "tags": {},
      "kind": "StorageV2"
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2017-04-01",
      "name": "[variables('Primary Event Hub Namespace')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
      ],
      "tags": {},
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0
      },
      "resources": [
        {
          "type": "eventhubs",
          "apiVersion": "2017-04-01",
          "name": "telemetry",
          "dependsOn": [
            "[resourceId('Microsoft.EventHub/namespaces', variables('Primary Event Hub Namespace'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage Account Name'))]"
          ],
          "properties": {
            "messageRetentionInDays": 1,
            "partitionCount": 5,
            "status": "Active",
            "captureDescription": {
              "enabled": true,
              "encoding": "Avro",
              "intervalInSeconds": 120,
              "sizeLimitInBytes": 10485760,
              "destination": {
                "name": "EventHubArchive.AzureBlockBlob",
                "properties": {
                  "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage Account Name'))]",
                  "blobContainer": "telemetry-capture"
                }
              }
            }
          },
          "resources": [
            {
              "type": "authorizationRules",
              "apiVersion": "2017-04-01",
              "name": "listenTelemetryRule",
              "dependsOn": [
                "[variables('Primary Telemetry Hub Id')]"
              ],
              "properties": {
                "rights": [
                  "Listen"
                ]
              }
            }
          ]
        },
        {
          "type": "eventhubs",
          "apiVersion": "2017-04-01",
          "name": "summary",
          "dependsOn": [
            "[resourceId('Microsoft.EventHub/namespaces', variables('Primary Event Hub Namespace'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage Account Name'))]"
          ],
          "properties": {
            "messageRetentionInDays": 1,
            "partitionCount": 5,
            "status": "Active",
            "captureDescription": {
              "enabled": true,
              "encoding": "Avro",
              "intervalInSeconds": 120,
              "sizeLimitInBytes": 10485760,
              "destination": {
                "name": "EventHubArchive.AzureBlockBlob",
                "properties": {
                  "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage Account Name'))]",
                  "blobContainer": "summary-capture"
                }
              }
            }
          },
          "resources": [
            {
              "type": "authorizationRules",
              "apiVersion": "2017-04-01",
              "name": "sendSummaryRule",
              "dependsOn": [
                "[variables('Summary Hub Id')]"
              ],
              "properties": {
                "rights": [
                  "Send"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2017-04-01",
      "name": "[variables('Secondary Event Hub Namespace')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {},
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0
      },
      "resources": [
        {
          "type": "eventhubs",
          "apiVersion": "2017-04-01",
          "name": "telemetry",
          "dependsOn": [
            "[resourceId('Microsoft.EventHub/namespaces', variables('Secondary Event Hub Namespace'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage Account Name'))]"
          ],
          "properties": {
            "messageRetentionInDays": 1,
            "partitionCount": 5,
            "status": "Active",
            "captureDescription": {
              "enabled": true,
              "encoding": "Avro",
              "intervalInSeconds": 120,
              "sizeLimitInBytes": 10485760,
              "destination": {
                "name": "EventHubArchive.AzureBlockBlob",
                "properties": {
                  "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage Account Name'))]",
                  "blobContainer": "telemetry-secondary-capture"
                }
              }
            }
          },
          "resources": []
        }
      ]
    },
    {
      "type": "Microsoft.StreamAnalytics/StreamingJobs",
      "apiVersion": "2016-03-01",
      "name": "summary-job",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('Primary Telemetry Hub Id')]",
        "[variables('Primary Telemetry Listen Rule Id')]",
        "[variables('Summary Hub Id')]",
        "[variables('Summary Send Rule Id')]",
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('Secondary Event Hub Namespace'), 'telemetry')]"
      ],
      "properties": {
        "sku": {
          "name": "standard"
        },
        "outputStartMode": "JobStartTime",
        "outputErrorPolicy": "stop",
        "eventsOutOfOrderPolicy": "adjust",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "inputs": [
          {
            "name": "primary-telemetry",
            "properties": {
              "type": "stream",
              "dataSource": {
                "type": "Microsoft.ServiceBus/EventHub",
                "properties": {
                  "serviceBusNamespace": "[variables('Primary Event Hub Namespace')]",
                  "sharedAccessPolicyName": "listenTelemetryRule",
                  "sharedAccessPolicyKey": "[listKeys(variables('Primary Telemetry Listen Rule Id'), '2017-04-01').primaryKey]",
                  "eventHubName": "telemetry"
                  //,
                  //"consumerGroupName": "string"
                }
              },
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8",
                  "format": "lineSeparated"
                }
              }
            }
          }
        ],
        "outputs": [
          {
            "name": "summary",
            "properties": {
              "type": "stream",
              "dataSource": {
                "type": "Microsoft.ServiceBus/EventHub",
                "properties": {
                  "serviceBusNamespace": "[variables('Primary Event Hub Namespace')]",
                  "sharedAccessPolicyName": "sendSummaryRule",
                  "sharedAccessPolicyKey": "[listKeys(variables('Summary Send Rule Id'), '2017-04-01').primaryKey]",
                  "eventHubName": "summary"
                  //,
                  //"consumerGroupName": "string"
                }
              },
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8",
                  "format": "lineSeparated"
                }
              }
            }
          }
        ],
        "transformation": {
          "name": "Transformation",
          "properties": {
            "streamingUnits": 1,
            "query": "SELECT\r\nCOUNT(*) AS Count,\r\nWidgetId INTO [summary]\r\nFROM [primary-telemetry]\r\nTIMESTAMP BY CreatedAt\r\nGROUP BY WidgetId, TumblingWindow(second, 5)"
          }
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "name": "update-summary-app",
      "apiVersion": "2016-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          }
        },
        "parameters": {}
      }
    }
  ],
  "outputs": {}
}