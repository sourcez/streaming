{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Location": {
      "defaultValue": "eastus",
      "type": "string",
      "allowedValues": [
        "westus",
        "eastus",
        "westeurope",
        "westus2",
        "northeurope",
        "southeastasia"
      ],
      "metadata": {
        "description": "Location of resources:  Container Instance isn't available everywhere"
      }
    }
  },
  "variables": {
    "Event Hub Namespace": "[concat('eh-', uniqueString(concat(resourceGroup().id, 'namespace')))]",
    "Event Hub Name": "test-hub",
    "Event Hub Id": "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('Event Hub Namespace'), variables('Event Hub Name'))]",
    "Send Rule Name": "sendRule",
    "Send Rule Id": "[resourceId('Microsoft.EventHub/namespaces/eventHubs/authorizationRules', variables('Event Hub Namespace'), variables('Event Hub Name'), variables('Send Rule Name'))]",
    "containers": [
      {
        "protocol": "amqp",
        "scenario": "isolated-perf",
        "batchSize": 0,
        "threadCount": 0,
        "samplingTime": "0:0:0"
      },
      {
        "protocol": "http",
        "scenario": "isolated-perf",
        "batchSize": 0,
        "threadCount": 0,
        "samplingTime": "0:0:0"
      },
      {
        "protocol": "amqp",
        "scenario": "batch-one-by-one-perf",
        "batchSize": 50,
        "threadCount": 0,
        "samplingTime": "0:0:0"
      },
      {
        "protocol": "http",
        "scenario": "batch-one-by-one-perf",
        "batchSize": 50,
        "threadCount": 0,
        "samplingTime": "0:0:0"
      },
      {
        "protocol": "amqp",
        "scenario": "batch-perf",
        "batchSize": 50,
        "threadCount": 0,
        "samplingTime": "0:0:0"
      },
      {
        "protocol": "http",
        "scenario": "batch-perf",
        "batchSize": 50,
        "threadCount": 0,
        "samplingTime": "0:0:0"
      },
      {
        "protocol": "amqp",
        "scenario": "isolated-throughput",
        "batchSize": 0,
        "threadCount": 100,
        "samplingTime": "0:2:0"
      },
      {
        "protocol": "http",
        "scenario": "isolated-throughput",
        "batchSize": 0,
        "threadCount": 100,
        "samplingTime": "0:2:0"
      },
      {
        "protocol": "amqp",
        "scenario": "batch-one-by-one-throughput",
        "batchSize": 0,
        "threadCount": 100,
        "samplingTime": "0:2:0"
      },
      {
        "protocol": "http",
        "scenario": "batch-one-by-one-throughput",
        "batchSize": 0,
        "threadCount": 100,
        "samplingTime": "0:2:0"
      },
      {
        "protocol": "amqp",
        "scenario": "batch-throughput",
        "batchSize": 50,
        "threadCount": 100,
        "samplingTime": "0:2:0"
      },
      {
        "protocol": "http",
        "scenario": "batch-throughput",
        "batchSize": 50,
        "threadCount": 100,
        "samplingTime": "0:2:0"
      },
      {
        "protocol": "amqp",
        "scenario": "isolated-pool-throughput",
        "batchSize": 50,
        "threadCount": 100,
        "samplingTime": "0:2:0"
      },
      {
        "protocol": "http",
        "scenario": "isolated-pool-throughput",
        "batchSize": 50,
        "threadCount": 100,
        "samplingTime": "0:2:0"
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2017-04-01",
      "name": "[variables('Event Hub Namespace')]",
      "location": "[parameters('Location')]",
      "dependsOn": [],
      "tags": {},
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 10
      },
      "properties": {
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0
      },
      "resources": [
        {
          "type": "eventhubs",
          "apiVersion": "2017-04-01",
          "name": "[variables('Event Hub Name')]",
          "dependsOn": [
            "[resourceId('Microsoft.EventHub/namespaces', variables('Event Hub Namespace'))]"
          ],
          "properties": {
            "messageRetentionInDays": 1,
            "partitionCount": 5,
            "status": "Active"
          },
          "resources": [
            {
              "type": "authorizationRules",
              "apiVersion": "2017-04-01",
              "name": "[variables('Send Rule Name')]",
              "dependsOn": [
                "[variables('Event Hub Id')]"
              ],
              "properties": {
                "rights": [
                  "Send"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-04-01",
      "copy": {
        "name": "Container-group-copy",
        "count": "[length(variables('containers'))]"
      },
      "name": "[concat(variables('containers')[copyIndex()].scenario, '-', variables('containers')[copyIndex()].protocol, '-group')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[variables('Send Rule Id')]"
      ],
      "properties": {
        "restartPolicy": "Never",
        "containers": [
          {
            "name": "container",
            "properties": {
              "image": "vplauzon/client-perf-event-hub",
              "environmentVariables": [
                {
                  "name": "CONNECTION_STRING",
                  "value": "[concat('Endpoint=sb://', variables('Event Hub Namespace'), '.servicebus.windows.net/;SharedAccessKeyName=', variables('Send Rule Name'), ';SharedAccessKey=', listKeys(variables('Send Rule Id'), '2017-04-01').primaryKey, ';EntityPath=', variables('Event Hub Name'))]"
                },
                {
                  "name": "SCENARIO",
                  "value": "[variables('containers')[copyIndex()].scenario]"
                },
                {
                  "name": "PROTOCOL",
                  "value": "[variables('containers')[copyIndex()].protocol]"
                },
                {
                  "name": "BATCH_SIZE",
                  "value": "[variables('containers')[copyIndex()].batchSize]"
                },
                {
                  "name": "THREAD_COUNT",
                  "value": "[variables('containers')[copyIndex()].threadCount]"
                },
                {
                  "name": "SAMPLING_TIME",
                  "value": "[variables('containers')[copyIndex()].samplingTime]"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGb": 1
                }
              }
            }
          }
        ],
        "osType": "Linux"
      }
    }
  ],
  "outputs": {
    "Event Hub Send Connection String": {
      "type": "string",
      "value": "[concat('Endpoint=sb://', variables('Event Hub Namespace'), '.servicebus.windows.net/;SharedAccessKeyName=', variables('Send Rule Name'), ';SharedAccessKey=', listKeys(variables('Send Rule Id'), '2017-04-01').primaryKey, ';EntityPath=', variables('Event Hub Name'))]"
    }
  }
}